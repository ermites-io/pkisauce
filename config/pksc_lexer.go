// Code generated from pksc.g4 by ANTLR 4.9.2. DO NOT EDIT.

package config

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 24, 200,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 3, 2, 6,
	2, 57, 10, 2, 13, 2, 14, 2, 58, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 7,
	3, 67, 10, 3, 12, 3, 14, 3, 70, 11, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 7, 4, 81, 10, 4, 12, 4, 14, 4, 84, 11, 4, 3, 4, 3,
	4, 3, 5, 6, 5, 89, 10, 5, 13, 5, 14, 5, 90, 3, 5, 3, 5, 3, 6, 3, 6, 3,
	7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3,
	11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13,
	3, 13, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3,
	16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18,
	3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3,
	19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 5, 21,
	160, 10, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 7, 22, 167, 10, 22, 12,
	22, 14, 22, 170, 11, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 7, 25,
	178, 10, 25, 12, 25, 14, 25, 181, 11, 25, 3, 25, 3, 25, 3, 25, 7, 25, 186,
	10, 25, 12, 25, 14, 25, 189, 11, 25, 3, 25, 5, 25, 192, 10, 25, 3, 26,
	3, 26, 5, 26, 196, 10, 26, 3, 27, 3, 27, 3, 27, 5, 68, 179, 187, 2, 28,
	3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23,
	13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41,
	22, 43, 23, 45, 2, 47, 2, 49, 24, 51, 2, 53, 2, 3, 2, 8, 5, 2, 11, 12,
	15, 15, 34, 34, 4, 2, 12, 12, 15, 15, 5, 2, 67, 92, 97, 97, 99, 124, 3,
	2, 50, 59, 5, 2, 2, 2, 12, 12, 94, 94, 11, 2, 36, 36, 41, 41, 94, 94, 99,
	100, 104, 104, 112, 112, 116, 116, 118, 118, 120, 120, 2, 206, 2, 3, 3,
	2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3,
	2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19,
	3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2,
	27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2,
	2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2,
	2, 2, 43, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 3, 56, 3, 2, 2, 2, 5, 62, 3, 2,
	2, 2, 7, 76, 3, 2, 2, 2, 9, 88, 3, 2, 2, 2, 11, 94, 3, 2, 2, 2, 13, 96,
	3, 2, 2, 2, 15, 98, 3, 2, 2, 2, 17, 100, 3, 2, 2, 2, 19, 102, 3, 2, 2,
	2, 21, 104, 3, 2, 2, 2, 23, 108, 3, 2, 2, 2, 25, 114, 3, 2, 2, 2, 27, 119,
	3, 2, 2, 2, 29, 122, 3, 2, 2, 2, 31, 126, 3, 2, 2, 2, 33, 133, 3, 2, 2,
	2, 35, 138, 3, 2, 2, 2, 37, 142, 3, 2, 2, 2, 39, 150, 3, 2, 2, 2, 41, 157,
	3, 2, 2, 2, 43, 163, 3, 2, 2, 2, 45, 171, 3, 2, 2, 2, 47, 173, 3, 2, 2,
	2, 49, 191, 3, 2, 2, 2, 51, 195, 3, 2, 2, 2, 53, 197, 3, 2, 2, 2, 55, 57,
	9, 2, 2, 2, 56, 55, 3, 2, 2, 2, 57, 58, 3, 2, 2, 2, 58, 56, 3, 2, 2, 2,
	58, 59, 3, 2, 2, 2, 59, 60, 3, 2, 2, 2, 60, 61, 8, 2, 2, 2, 61, 4, 3, 2,
	2, 2, 62, 63, 7, 49, 2, 2, 63, 64, 7, 44, 2, 2, 64, 68, 3, 2, 2, 2, 65,
	67, 11, 2, 2, 2, 66, 65, 3, 2, 2, 2, 67, 70, 3, 2, 2, 2, 68, 69, 3, 2,
	2, 2, 68, 66, 3, 2, 2, 2, 69, 71, 3, 2, 2, 2, 70, 68, 3, 2, 2, 2, 71, 72,
	7, 44, 2, 2, 72, 73, 7, 49, 2, 2, 73, 74, 3, 2, 2, 2, 74, 75, 8, 3, 3,
	2, 75, 6, 3, 2, 2, 2, 76, 77, 7, 49, 2, 2, 77, 78, 7, 49, 2, 2, 78, 82,
	3, 2, 2, 2, 79, 81, 10, 3, 2, 2, 80, 79, 3, 2, 2, 2, 81, 84, 3, 2, 2, 2,
	82, 80, 3, 2, 2, 2, 82, 83, 3, 2, 2, 2, 83, 85, 3, 2, 2, 2, 84, 82, 3,
	2, 2, 2, 85, 86, 8, 4, 3, 2, 86, 8, 3, 2, 2, 2, 87, 89, 9, 3, 2, 2, 88,
	87, 3, 2, 2, 2, 89, 90, 3, 2, 2, 2, 90, 88, 3, 2, 2, 2, 90, 91, 3, 2, 2,
	2, 91, 92, 3, 2, 2, 2, 92, 93, 8, 5, 3, 2, 93, 10, 3, 2, 2, 2, 94, 95,
	7, 125, 2, 2, 95, 12, 3, 2, 2, 2, 96, 97, 7, 127, 2, 2, 97, 14, 3, 2, 2,
	2, 98, 99, 7, 46, 2, 2, 99, 16, 3, 2, 2, 2, 100, 101, 7, 36, 2, 2, 101,
	18, 3, 2, 2, 2, 102, 103, 7, 61, 2, 2, 103, 20, 3, 2, 2, 2, 104, 105, 7,
	99, 2, 2, 105, 106, 7, 112, 2, 2, 106, 107, 7, 123, 2, 2, 107, 22, 3, 2,
	2, 2, 108, 109, 7, 102, 2, 2, 109, 110, 7, 103, 2, 2, 110, 111, 7, 100,
	2, 2, 111, 112, 7, 119, 2, 2, 112, 113, 7, 105, 2, 2, 113, 24, 3, 2, 2,
	2, 114, 115, 7, 114, 2, 2, 115, 116, 7, 99, 2, 2, 116, 117, 7, 117, 2,
	2, 117, 118, 7, 117, 2, 2, 118, 26, 3, 2, 2, 2, 119, 120, 7, 113, 2, 2,
	120, 121, 7, 112, 2, 2, 121, 28, 3, 2, 2, 2, 122, 123, 7, 116, 2, 2, 123,
	124, 7, 114, 2, 2, 124, 125, 7, 101, 2, 2, 125, 30, 3, 2, 2, 2, 126, 127,
	7, 102, 2, 2, 127, 128, 7, 99, 2, 2, 128, 129, 7, 103, 2, 2, 129, 130,
	7, 111, 2, 2, 130, 131, 7, 113, 2, 2, 131, 132, 7, 112, 2, 2, 132, 32,
	3, 2, 2, 2, 133, 134, 7, 114, 2, 2, 134, 135, 7, 99, 2, 2, 135, 136, 7,
	118, 2, 2, 136, 137, 7, 106, 2, 2, 137, 34, 3, 2, 2, 2, 138, 139, 7, 119,
	2, 2, 139, 140, 7, 117, 2, 2, 140, 141, 7, 103, 2, 2, 141, 36, 3, 2, 2,
	2, 142, 143, 7, 105, 2, 2, 143, 144, 7, 113, 2, 2, 144, 145, 7, 47, 2,
	2, 145, 146, 7, 105, 2, 2, 146, 147, 7, 116, 2, 2, 147, 148, 7, 114, 2,
	2, 148, 149, 7, 101, 2, 2, 149, 38, 3, 2, 2, 2, 150, 151, 7, 105, 2, 2,
	151, 152, 7, 113, 2, 2, 152, 153, 7, 47, 2, 2, 153, 154, 7, 118, 2, 2,
	154, 155, 7, 110, 2, 2, 155, 156, 7, 117, 2, 2, 156, 40, 3, 2, 2, 2, 157,
	159, 5, 17, 9, 2, 158, 160, 5, 43, 22, 2, 159, 158, 3, 2, 2, 2, 159, 160,
	3, 2, 2, 2, 160, 161, 3, 2, 2, 2, 161, 162, 5, 17, 9, 2, 162, 42, 3, 2,
	2, 2, 163, 168, 5, 45, 23, 2, 164, 167, 5, 45, 23, 2, 165, 167, 5, 47,
	24, 2, 166, 164, 3, 2, 2, 2, 166, 165, 3, 2, 2, 2, 167, 170, 3, 2, 2, 2,
	168, 166, 3, 2, 2, 2, 168, 169, 3, 2, 2, 2, 169, 44, 3, 2, 2, 2, 170, 168,
	3, 2, 2, 2, 171, 172, 9, 4, 2, 2, 172, 46, 3, 2, 2, 2, 173, 174, 9, 5,
	2, 2, 174, 48, 3, 2, 2, 2, 175, 179, 7, 41, 2, 2, 176, 178, 5, 51, 26,
	2, 177, 176, 3, 2, 2, 2, 178, 181, 3, 2, 2, 2, 179, 180, 3, 2, 2, 2, 179,
	177, 3, 2, 2, 2, 180, 182, 3, 2, 2, 2, 181, 179, 3, 2, 2, 2, 182, 192,
	7, 41, 2, 2, 183, 187, 7, 36, 2, 2, 184, 186, 5, 51, 26, 2, 185, 184, 3,
	2, 2, 2, 186, 189, 3, 2, 2, 2, 187, 188, 3, 2, 2, 2, 187, 185, 3, 2, 2,
	2, 188, 190, 3, 2, 2, 2, 189, 187, 3, 2, 2, 2, 190, 192, 7, 36, 2, 2, 191,
	175, 3, 2, 2, 2, 191, 183, 3, 2, 2, 2, 192, 50, 3, 2, 2, 2, 193, 196, 5,
	53, 27, 2, 194, 196, 10, 6, 2, 2, 195, 193, 3, 2, 2, 2, 195, 194, 3, 2,
	2, 2, 196, 52, 3, 2, 2, 2, 197, 198, 7, 94, 2, 2, 198, 199, 9, 7, 2, 2,
	199, 54, 3, 2, 2, 2, 14, 2, 58, 68, 82, 90, 159, 166, 168, 179, 187, 191,
	195, 4, 8, 2, 2, 2, 3, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "", "", "'{'", "'}'", "','", "'\"'", "';'", "'any'", "'debug'",
	"'pass'", "'on'", "'rpc'", "'daemon'", "'path'", "'use'", "'go-grpc'",
	"'go-tls'",
}

var lexerSymbolicNames = []string{
	"", "WS", "COMMENT", "LINE_COMMENT", "TERMINATOR", "LCURLY", "RCURLY",
	"COMMA", "QUOTE", "SEMI", "KWANY", "KWDBG", "KWPASS", "KWON", "KWRPC",
	"KWDAEMON", "KWPATH", "KWUSE", "KWGOGRPC", "KWGOTLS", "HNAME", "IDENTIFIER",
	"PATH",
}

var lexerRuleNames = []string{
	"WS", "COMMENT", "LINE_COMMENT", "TERMINATOR", "LCURLY", "RCURLY", "COMMA",
	"QUOTE", "SEMI", "KWANY", "KWDBG", "KWPASS", "KWON", "KWRPC", "KWDAEMON",
	"KWPATH", "KWUSE", "KWGOGRPC", "KWGOTLS", "HNAME", "IDENTIFIER", "LETTER",
	"DECIMAL_DIGIT", "PATH", "CHAR_VALUE", "CHAR_ESCAPE",
}

type pkscLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewpkscLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *pkscLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewpkscLexer(input antlr.CharStream) *pkscLexer {
	l := new(pkscLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "pksc.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// pkscLexer tokens.
const (
	pkscLexerWS           = 1
	pkscLexerCOMMENT      = 2
	pkscLexerLINE_COMMENT = 3
	pkscLexerTERMINATOR   = 4
	pkscLexerLCURLY       = 5
	pkscLexerRCURLY       = 6
	pkscLexerCOMMA        = 7
	pkscLexerQUOTE        = 8
	pkscLexerSEMI         = 9
	pkscLexerKWANY        = 10
	pkscLexerKWDBG        = 11
	pkscLexerKWPASS       = 12
	pkscLexerKWON         = 13
	pkscLexerKWRPC        = 14
	pkscLexerKWDAEMON     = 15
	pkscLexerKWPATH       = 16
	pkscLexerKWUSE        = 17
	pkscLexerKWGOGRPC     = 18
	pkscLexerKWGOTLS      = 19
	pkscLexerHNAME        = 20
	pkscLexerIDENTIFIER   = 21
	pkscLexerPATH         = 22
)
